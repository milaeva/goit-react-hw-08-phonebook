{"version":3,"sources":["components/Container/Container.js","components/Section/Section.module.css","components/Container/Container.module.css","components/Section/Section.js","components/ButtonGoogleLogin/ButtonGoogleLogin.module.css","components/FormaLogIn/FormaLogIn.module.css","components/ButtonGoogleLogin/ButtonGoogleLogin.js","components/ButtonGoogleLogin/refreshToken.js","components/FormaLogIn/FormaLogIn.js","pages/LoginPage.js"],"names":["Container","children","className","s","container","module","exports","Section","nameForClass","ButtonGoogleLogin","clientId","buttonText","onSuccess","res","console","log","profileObj","refreshTiming","tokenObj","expires_in","refreshToken","a","reloadAuthResponse","newAuthRes","localStorage","setItem","id_token","setTimeout","refreshTokenSetup","onFailure","alert","isSignedIn","render","renderProps","buttonGoogle","onClick","disabled","logoWrapper","src","width","height","alt","FormaLogIn","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","id","value","wrapperFormaLogIn","Form","onSubmit","e","preventDefault","authOperations","logIn","Group","Label","Control","type","onChange","placeholder","Text","Button","buttonLog","separator","LoginPage"],"mappings":"+MAMeA,EAJG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,M,oBCFvCI,EAAOC,QAAU,CAAC,cAAc,6BAA6B,QAAU,yBAAyB,YAAc,sD,oBCA9GD,EAAOC,QAAU,CAAC,UAAY,+B,yGCSfC,EANC,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcP,EAAjB,EAAiBA,SAAjB,OACd,yBAASC,UAAWC,IAAE,GAAD,OAAIK,IAAzB,SACE,cAACR,EAAA,EAAD,UAAYC,Q,oBCLhBI,EAAOC,QAAU,CAAC,aAAe,wCAAwC,YAAc,yC,oBCAvFD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,kBAAoB,sCAAsC,UAAY,8BAA8B,UAAY,gC,wJCiDnJG,EAzCW,WAaxB,OACE,cAAC,cAAD,CACEC,SAjBJ,4EAkBIC,WAAW,qBACXC,UAhBc,SAAAC,GAChBC,QAAQC,IAAI,8BAA+BF,EAAIG,YCXlB,SAAAH,GAE/B,IAAII,EAA6D,KAA5CJ,EAAIK,SAASC,YAAc,MAE1CC,EAAY,uCAAG,4BAAAC,EAAA,sEACMR,EAAIS,qBADV,OACbC,EADa,OAEnBN,EAA2D,KAA1CM,EAAWJ,YAAc,MAC1CL,QAAQC,IAAI,cAAeQ,GAE3BC,aAAaC,QAAQ,YAAaF,EAAWG,UAG7CC,WAAWP,EAAcH,GARN,2CAAH,qDAYlBU,WAAWP,EAAcH,GDJvBW,CAAkBf,IAehBgB,UAZc,SAAAhB,GAChBC,QAAQC,IAAI,qBAAsBF,GAClCiB,MAAM,0FAWJC,YAAY,EACZC,OAAQ,SAAAC,GAAW,OACjB,yBACE/B,UAAWC,IAAE+B,aACbC,QAASF,EAAYE,QACrBC,SAAUH,EAAYG,SAHxB,UAKE,qBAAKlC,UAAWC,IAAEkC,YAAlB,SACE,qBACEC,IAAI,yDACJC,MAAM,KACNC,OAAO,KACPC,IAAI,kBAVV,4B,0BEwCOC,EA5DI,WACjB,IAAMC,EAAWC,cACjB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAA+B,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,GAAIC,EAAc,EAAdA,MACpC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,SAWN,OACE,qBAAKnD,UAAWC,IAAEmD,kBAAlB,SACE,eAACC,EAAA,EAAD,CAAMC,SATW,SAAAC,GACnBA,EAAEC,iBACFf,EAASgB,IAAeC,MAAM,CAAEd,QAAOE,cACvCD,EAAS,IACTE,EAAY,KAKV,UACE,eAACM,EAAA,EAAKM,MAAN,CAAY3D,UAAU,OAAtB,UACE,cAACqD,EAAA,EAAKO,MAAN,4BACA,cAACP,EAAA,EAAKQ,QAAN,CACEC,KAAK,QACLZ,GAAG,QACHC,MAAOP,EACPmB,SAAUf,EACVgB,YAAY,gBAEd,cAACX,EAAA,EAAKY,KAAN,CAAWjE,UAAU,aAArB,+DAKF,eAACqD,EAAA,EAAKM,MAAN,CAAY3D,UAAU,OAAtB,UACE,cAACqD,EAAA,EAAKO,MAAN,uBACA,cAACP,EAAA,EAAKQ,QAAN,CACEC,KAAK,WACLZ,GAAG,WACHC,MAAOL,EACPiB,SAAUf,EACVgB,YAAY,gBAGhB,cAACE,EAAA,EAAD,CAAQlE,UAAWC,IAAEkE,UAAWL,KAAK,SAArC,oBAGA,sBAAM9D,UAAWC,IAAEmE,UAAnB,gBACA,cAAC,EAAD,U,SCnDOC,UAVG,WAChB,OACE,mCACE,cAAChE,EAAA,EAAD,CAASC,aAAc,UAAvB,SACE,cAAC,EAAD","file":"static/js/5.48105a38.chunk.js","sourcesContent":["import s from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"new-contact\":\"Section_new-contact__2BHkk\",\"section\":\"Section_section__41vIk\",\"sectionList\":\"Section_sectionList__mMIgS Section_section__41vIk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__WA20h\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\nimport Container from 'components/Container';\n\nconst Section = ({ nameForClass, children }) => (\n  <section className={s[`${nameForClass}`]}>\n    <Container>{children}</Container>\n  </section>\n);\n\nexport default Section;\n\nSection.propTypes = {\n  nameForClass: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonGoogle\":\"ButtonGoogleLogin_buttonGoogle__y9ODQ\",\"logoWrapper\":\"ButtonGoogleLogin_logoWrapper__2zzs0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormaLogIn_form__3BFuh\",\"wrapperFormaLogIn\":\"FormaLogIn_wrapperFormaLogIn__3t783\",\"buttonLog\":\"FormaLogIn_buttonLog__1ro7C\",\"separator\":\"FormaLogIn_separator__3qhk-\"};","import { GoogleLogin } from 'react-google-login';\n\n// refresh token\nimport { refreshTokenSetup } from './refreshToken';\nimport s from './ButtonGoogleLogin.module.css';\n\nconst clientId =\n  '1053058699180-rjbu64pbbnr3glt31ten2uj7p4uv0jrn.apps.googleusercontent.com';\n\nconst ButtonGoogleLogin = () => {\n  const onSuccess = res => {\n    console.log('Login Success: currentUser:', res.profileObj);\n    refreshTokenSetup(res);\n  };\n\n  const onFailure = res => {\n    console.log('Login failed: res:', res);\n    alert(\n      `Failed to login. ðŸ˜¢ Please ping this to repo owner twitter.com/sivanesh_fiz`,\n    );\n  };\n\n  return (\n    <GoogleLogin\n      clientId={clientId}\n      buttonText=\"Log in with Google\"\n      onSuccess={onSuccess}\n      onFailure={onFailure}\n      isSignedIn={true}\n      render={renderProps => (\n        <button\n          className={s.buttonGoogle}\n          onClick={renderProps.onClick}\n          disabled={renderProps.disabled}\n        >\n          <div className={s.logoWrapper}>\n            <img\n              src=\"https://img.icons8.com/color/50/000000/google-logo.png\"\n              width=\"32\"\n              height=\"32\"\n              alt=\"logo google\"\n            />\n          </div>\n          Log in with Google\n        </button>\n      )}\n    />\n  );\n};\n\nexport default ButtonGoogleLogin;\n","export const refreshTokenSetup = res => {\n  // Timing to renew access token\n  let refreshTiming = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\n\n  const refreshToken = async () => {\n    const newAuthRes = await res.reloadAuthResponse();\n    refreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\n    console.log('newAuthRes:', newAuthRes);\n    // saveUserToken(newAuthRes.access_token);  <-- save new token\n    localStorage.setItem('authToken', newAuthRes.id_token);\n\n    // Setup the other timer after the first one\n    setTimeout(refreshToken, refreshTiming);\n  };\n\n  // Setup first refresh timer\n  setTimeout(refreshToken, refreshTiming);\n};\n","import { Form, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\n\nimport ButtonGoogleLogin from 'components/ButtonGoogleLogin';\nimport authOperations from 'redux/auth/auth-operations';\nimport s from './FormaLogIn.module.css';\n\nconst FormaLogIn = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { id, value } }) => {\n    switch (id) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div className={s.wrapperFormaLogIn}>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={handleChange}\n            placeholder=\"Enter email\"\n          />\n          <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={handleChange}\n            placeholder=\"Password\"\n          />\n        </Form.Group>\n        <Button className={s.buttonLog} type=\"submit\">\n          Log In\n        </Button>\n        <span className={s.separator}>Or</span>\n        <ButtonGoogleLogin />\n      </Form>\n    </div>\n  );\n};\n\nexport default FormaLogIn;\n","import FormaLogIn from 'components/FormaLogIn';\nimport Section from 'components/Section';\n\nconst LoginPage = () => {\n  return (\n    <>\n      <Section nameForClass={'section'}>\n        <FormaLogIn />\n      </Section>\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"sourceRoot":""}